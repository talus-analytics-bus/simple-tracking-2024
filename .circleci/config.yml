version: 2.1

credentials: &credentials
  - AWS Credentials

workflows:
  version: 2
  build:
    jobs:
      # dev site
      - deploy:
          # Examples:
          # bucket: 's3://dev-projectname'
          # distribution: 'E31RXXXXXXXXXX'
          bucket: 's3://dev-simple-tracking-2024'
          distribution: 'E17XXSCCNBRN0Z'
          context: *credentials
          filters:
            branches:
              only:
                - dev
      # review site
      - deploy:
          bucket: 's3://review-simple-tracking-2024'
          distribution: 'E2U3SYL0TUEADE'
          context: *credentials
          filters:
            branches:
              only:
                - review
      # staging site
      - deploy:
          bucket: 's3://staging-simple-tracking-2024'
          distribution: 'E3MB9ZL9VO1C4F'
          context: *credentials
          filters:
            branches:
              only:
                - staging
      # prod site
      - deploy:
          bucket: 's3://prod-simple-tracking-2024'
          distribution: 'E2A8B4MIGAG233'
          context: *credentials
          filters:
            branches:
              only:
                - prod

orbs:
  aws-cli: circleci/aws-cli@2.0.3

jobs:
  deploy:
    working_directory: ~/repo

    docker:
      - image: cimg/node:lts

    parameters:
      bucket:
        type: string
      distribution:
        type: string

    steps:
      - checkout
      - aws-cli/install

      # - restore_cache:
      #     keys:
      #       - npm-deps-{{ checksum "package-lock.json" }}
      #       - npm-deps-

      - run:
          name: NPM Install
          command: npm i

      # Commenting this out because this project
      # requires dynamic type generation which
      # we're not running here in the build

      # - run:
      #     name: Typescript Checks
      #     command: yarn tsc

      - run:
          name: Gatsby build
          command: |
            npm run build

      - run:
          name: AWS S3 Sync to <<parameters.bucket>>
          command: aws s3 sync public/ <<parameters.bucket>> --delete

      - run:
          name: Run cloudfront invalidation
          command: |
            aws cloudfront create-invalidation \
            --distribution-id <<parameters.distribution>> \
            --paths "/*"

      - save_cache:
          key: npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - 'node_modules'
            - '.cache'
            - 'public'
